print(colnames(dat))
print(dim(dat))
hight=dat$Height.Inches*2.5
weight=dat$Weight.Pounds*0.45
print(hight)
print(weight)
########hight########################
hist(hight,col="blue",breaks = 30)
hist(hight,col = "yellow",breaks = 25,xlim =c(150,200))
hist(hight,col = "yellow",breaks = 30,xlim =c(150,200),ylim =c(0,2200) )
#for ploting we can use plot, lines, points
x=seq(150,200,0.5)
y=dnorm(x,mean=mean(hight),sd=sd(hight))#gaussin density distribution
yfr=y*nrow(dat)#for frequency dtribution we have to multiply the no of rows with density of data
lines(x,yfr,col="red",lwd=2) #plot with hight
########weight################
hist(weight,col = "red",breaks = 30)
hist(weight,col = "red",breaks = 30,xlim =c(40,80),ylim = c(0,2000))
w=seq(40,80,0.5)
wdens=dnorm(w,mean =mean(weight),sd=sd(weight))
wfr=wdens*nrow(dat)
lines(w,wfr,col="blue",lwd=5)
######## z transform #########
z_hight=(hight-mean(hight))/sd(hight) # since mu and sigma is not avavilable so we take mean for mu and sd for sigma
z_weight=(weight-mean(weight))/sd(weight)
par(mfrow=c(2,2))
hist(z_hight,breaks = 30,col="green")
z_h=seq(-5,5,0.1)
z_hight_dens=dnorm(z_h,mean=0,sd=1)
z_hight_fr=z_hight_dens*nrow(dat)
lines(z_h,z_hight_fr,col="red", lwd=3)
hist(z_weight,breaks = 30,col="yellow")
##############par#################
par(mfrow=c(2,2))
hist(hight,col = "blue",breaks = 30,xlim =c(150,200),ylim =c(0,2200) )
lines(x,yfr,col="red",lwd=2)
hist(z_hight,breaks = 30,col="red")
hist(weight,col = "blue",breaks = 30,xlim =c(40,80),ylim = c(0,2000))
hist(z_weight,breaks = 30,col="red")
if(x<y){
print("x is less than y")
}
##############if_else_if#################
x=5
y=10
z=20
if(x<y){
print("x is less than y")
}
############conditional statement#################
#####if else statement#####
var1=25
var2=0
if((var1+var2)>=250){
print("value is gresater than 250")
}else if((var1+var2)>75){
print("value is greater than75")
}else if ((var1+var2)>60){
print("value is greater than 65")
}else
print("no is less than 65")
##############if_else_if#################
x=5
y=10
z=20
if(x<y){
print("x is less than y")
}else if (y>z){
print("y greater than z")
}else{
print("z is greater than x and y")
}
##############if_else_if#################
x=5
y=10
z=20
if(x>y){
print("x is less than y")
}else if (y>z){
print("y greater than z")
}else{
print("z is greater than x and y")
}
##############if_else_if#################
x=5
y=10
z=20
if(x=y){
print("x is less than y")
}else if (y<z){
print("y greater than z")
}else{
print("z is greater than x and y")
}
if(x==y){
print("x is less than y")
}else if (y<z){
print("y greater than z")
}else{
print("z is greater than x and y")
}
##############if_else_if#################
x=5
y=10
z=20
if(x==y){
print("x is less than y")
}else if (y<z){
print("y greater than z")
}else{
print("z is greater than x and y")
}
##########while#############
x=10
while(x>3){
print(x)
x=x-1
}
#########for loop##########
#directly access elements
x=c(10,2,0,30,40,70)
for(i in x){
print(x*100)
}
#########for loop##########
#directly access elements
x=c(10,2,0,30,40,70)
for(i in x){
print(x*100)
}
print("---------")
#########for loop##########
#directly access elements
x=c(10,2,0,30,40,70)
##access elements with index
for(i in 1:length(x)){
print(i[x]*100)
}
print(x[i]*100)
#########for loop##########
#directly access elements
vec=c(10,2,0,30,40,70)
##access elements with index
for(i in 1:length(vec)){
print(x[i]*100)
}
#########for loop##########
#directly access elements
x=c(10,2,0,30,40,70)
##access elements with index
for(i in 1:length(x)){
print(x[i]*100)
}
res=function(l,w){
area= l*w
return(area)
}
getarea<-function(l,w){
area= l*w
return(area)
}
area=getarea(20,10)
getarea<-function(l,w){
area= l*w
return(area)
}
print(area)
#######################
help(rnorm)
xvec=rnorm(10,mean = 6,sd=1.5)
print(xvec)
#######central limit theoream sampling from gaussin
mu=12
sigma=2.5
xbar_vec=()# empty vector
xbar_vec=()# empty vector
xbar_vec=c()# empty vector
n=16#samplesize
#######central limit theoream sampling from gaussin
mu=12
sigma=2.5
xbar_vec=c()# empty vector
n=16#samplesize
for(i in 1:1000){
x=rnorm(n,mu,sigma)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
}
print(xbar_vec)
z_vec=c()
print(z)
#######central limit theoream sampling from gaussin
mu=12
sigma=2.5
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:1000){
x=rnorm(n,mu,sigma)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
}
print(xbar_vec)
print(z)
#######central limit theoream sampling from gaussin
mu=12
sigma=2.5
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:1000){
x=rnorm(n,mu,sigma)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xvec, breaks = 30,xlim = c(0,10))
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30)
hist(z_vec,breaks = 30,xlim = c(-4,4))
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
#######central limit theoream sampling from gaussin
mu=12
sigma=2.5
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:1000){
x=rnorm(n,mu,sigma)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=rnorm(10000,mean,sd)
#xvec=rnorm(10000,mean,sd)
print(xbar_vec)
print(z_vec)
#######central limit theoream sampling from gaussin
mu=12
sigma=2.5
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:1000){
x=rnorm(n,mu,sigma)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
#xvec=rnorm(10000,mean,sd)
print(xbar_vec)
print(z_vec)
par(mfrow=c(4,4))
hist(xvec, breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
#xvec=rnorm(10000,mean,sd)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
xvec=rnorm(10000,mean,sd)
xvec=rnorm(10000,mu,sigma)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,10))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
help(runif)
a=5
b=10
x=runif(100,a,b)
print(x)
x=runif(100000,a,b)
print(x)
hist(x,breaks = 10)
x=runif(10000,a,b)
print(x)
hist(x,breaks = 10)
a=5
b=10
x=runif(10000,a,b)
print(x)
hist(x,breaks = 10)
hist(x,breaks = 1)
x=runif(10000,a,b)
print(x)
hist(x,breaks = 1)
hist(x,breaks = 30)
x=runif(10000,a,b)
print(x)
hist(x,breaks = 30)
hist(x,breaks = 50)
hist(x,breaks = 150)
hist(x,breaks = 1000)
hist(x,breaks = 10000)
a=5
b=10
x=runif(10000,a,b)
print(x)
hist(x,breaks = 30)
hist(x,breaks = 10000)
mu=(1/2)*(a+b)
sigmasqr=(1/2)*(b-a)^2
sigmasqr=(1/12)*(b-a)^2
sigma1=sqrt(sigmasqr)
print(sigma1)
##########CLT_uniform distribution###########
a=5
b=10
mu=(1/2)*(a+b)
sigma1=(1/12)*(b-a)^2
sigma=sqrt(sigma1)
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:1000){
x=runif(n,mu,sigma)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=runif(10000,mu,sigma)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
##########CLT_uniform distribution###########
a=5
b=10
mu=(1/2)*(a+b)
sigma1=(1/12)*(b-a)^2
sigma=sqrt(sigma1)
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:1000){
x=runif(n,a,b)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=runif(10000,a,b)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
##########CLT_uniform distribution###########
a=5
b=10
mu=(1/2)*(a+b)
sigma1=(1/12)*(b-a)^2
sigma=sqrt(sigma1)
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:10000){
x=runif(n,a,b)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=runif(10000,a,b)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
##########CLT_uniform distribution###########
a=5
b=10
mu=(1/2)*(a+b)
sigma1=(1/12)*(b-a)^2
sigma=sqrt(sigma1)
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:100000){
x=runif(n,a,b)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=runif(10000,a,b)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
xvec=runif(1000000,a,b)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
##########CLT_uniform distribution###########
a=5
b=10
mu=(1/2)*(a+b)
sigma1=(1/12)*(b-a)^2
sigma=sqrt(sigma1)
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:100000){
x=runif(n,a,b)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=runif(1000000,a,b)
print(xbar_vec)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
xvec=runif(1000000,a,b)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
##poission distribution from ctl## home work
a=5
b=10
mu=(1/2)*(a+b)
sigma1=(1/12)*(b-a)^2
sigma=sqrt(sigma1)
xbar_vec=c()# empty vector
n=16#samplesize
z_vec=c()
for(i in 1:100000){
x=ppois(n,a,b)
xbar=mean(x)
xbar_vec=c(xbar_vec,xbar)
z=(xbar-mu)/(sigma/sqrt(n))
z_vec=c(z_vec,z)
}
xvec=ppois(1000000,a,b)
print(xbar_vec)
print(z_vec)
par(mfrow=c(3,1))
hist(xvec, breaks = 30,xlim = c(0,20))
hist(xbar_vec,breaks = 30,xlim = c(0,20))
hist(z_vec,breaks = 30,xlim = c(-4,4))
print(sd(xvec))
print(mean(xbar_vec))
print(sd(xbar_vec))
